; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 2
; RUN: opt -load-pass-plugin ../../tasks/dead-code-elimination/build/libDeadCodeElimination.%SHLIBEXT% -passes=dead-code-elimination -S < %s | FileCheck %s

declare i32 @printf(ptr, ...)

define void @function1(i32 %arg) {
; CHECK-LABEL: define void @function1
; CHECK-SAME: (i32 [[ARG:%.*]]) {
; CHECK-NEXT:  [[BLOCK:.*]]:
; CHECK-NEXT:    ret void
;
entry:
  %x = alloca i32
  store i32 10, ptr %x
  %load = load i32, ptr %x
  %cmp = icmp sgt i32 %load, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:
  br label %cond.end

cond.false:
  br label %cond.end

cond.end:
  %cond = phi i32 [ %load, %cond.true ], [ %arg, %cond.false ]
  ret void
}

define void @function2() {
; CHECK-LABEL: define void @function2() {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[TMP0:%.*]] = call i32 (ptr, ...) @printf(ptr @str1)
; CHECK-NEXT:    ret void
;
entry:
  %x = alloca i32
  %y = alloca i32
  %z = alloca i32
  store i32 10, ptr %x
  store i32 20, ptr %y
  %0 = add nsw i31 1, 1
  %1 = load i32, ptr %x
  %2 = load i32, ptr %y
  %3 = add nsw i32 %1, %2
  store i32 %3, ptr %z
  %4 = load i32, ptr %y
  %5 = load i32, ptr %z
  %6 = mul nsw i32 %4, %5
  store i32 %6, ptr %x
  %7 = load i32, ptr %z
  %8 = add nsw i32 %7, 1
  store i32 %8, ptr %z
  %9 = load i32, ptr %y
  %10 = sub nsw i32 %9, 1
  store i32 %10, ptr %y
  %11 = call i32 (ptr, ...) @printf(ptr @str1)
  ret void
}

@str1 = private unnamed_addr constant [23 x i8] c"Function %d completed\0A\00"
